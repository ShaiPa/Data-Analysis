license()
citation()
help()
clear()
clearPushBack()
install.packages("swirl")
install.packages("swirl")
library(swirl)
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Harish Garg")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
View(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mtcars$mpg
mtcars$hp
mtcars$cyl
mean(mtcars$mpg)
```{r}
summary(mtcars)
```
summary(mtcars)
efficient <-subset(mtcars, mpg >= 23)
efficient
str(mtcars)
dim(mtcars)
dtm(efficient)
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightcars <- subset(mtcars, wt < 2)
lightcars
dim(lightcars)
nrow(lightcars)
mtcars$year <- 1974
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
mtcars
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
# install.packages('knitr', dependencies = T)
# library(knitr)
install.packages('knitr', dependencies = T)
library(knitr)
subset(mtcars, mpg >= 30 | hp < 60)
reddit <- read.csv("reddit.csv")
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
ggplot(data = reddit, x = gender)
getwd()
setwd("~/data_analysis/R/Udacity_Intro_To_R")
reddit <- read.csv("reddit.csv")
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
ggplot(data = reddit, x = gender)
p <- ggplot(mtcars, aes(wt, mpg))
p <- p + geom_point()
print(p)
ggplot(data = reddit, x = gender)
p <- ggplot(data = reddit, x = gender)
print(p)
p <- p + geom_point()
print(p)
p <- ggplot(data = reddit, x = gender)
p <- p + geom_point()
print(p)
p <- ggplot(data = reddit, x = gender)
print(p)
qplot(data = reddit, x = gender)
qplot(data = reddit, x = age.range)
qplot(data = reddit, x = income.range)
qplot(data = reddit, x = age.range)
levels(reddit$age.range)
age.range
reddit$age.range
reddit$age.range <- relevel(reddit$age.range, "Under 18")
qplot(data = reddit, x = age.range)
View(lightcars)
getwd()
ls
read.delim("pseudo_facebook.csv")
getwd()
pf <- read.delim("pseudo_facebook.tsv")
names(pf)
library(ggplot2)
qplot(x = dob_day, data=pf)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
theme_set(theme_minimal(24))
qplot(x = dob_day, data=pf) +
scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data=pf) +
scale_x_descrete(breaks=1:31)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data=pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data=pf) +
scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
qplot(x = dob_day, data=pf) +
scale_x_continuous(breaks=1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(data = pf, x = tenure)
qplot(data = pf, x = tenure, color = I('black), fill = I(#099DD9))
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
qplot(data = pf, x = tenure, color = I('black), fill = I(#099DD9))
qplot(data = pf, x = tenure, color = I('black'), fill = I("#099DD9"))
qplot(data = pf, x = tenure,
color = I("black"), fill = I("#099DD9"))
qplot(data = pf, x = tenure,
color = I("black"), fill = I("#099DD9")),
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
qplot(data = pf, x = tenure, binwidth = 30,
color = I("black"), fill = I("#099DD9")),
qplot(data = pf, x = tenure, binwidth = 30,
color = I("black"), fill = I("#099DD9"))
qplot(data = pf, x = tenure, binwidth = 365,
color = I("black"), fill = I("#099DD9"))
qplot(data = pf, x = tenure, binwidth = 365,
color = I("black"), fill = I("#099DD9"))
qplot(data = pf, x = tenure/365, binwidth = 1,
color = I("black"), fill = I("#099DD9"))
qplot(data = pf, x = tenure/365, binwidth = 1,
color = I("black"), fill = I("#F76895"))
qplot(data = pf, x = tenure/365, binwidth = .25,
color = I("black"), fill = I("#F76895"))
qplot(data = pf, x = tenure/365, binwidth = .25,
color = I("black"), fill = I("#F76895")) +
scale_x_continuous(breaks = seq(1,7,1), limits = c(0, 7))
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
qplot(data = pf, x = tenure)
qplot(data = pf, x = tenure/365, binwidth = .25,
color = I("black"), fill = I("#F76895")) +
scale_x_continuous(breaks = seq(1,7,1), limits = c(0, 7))
qplot(data = pf, x = tenure/365, binwidth = .25,
color = I("black"), fill = I("#F76895")) +
scale_x_continuous(breaks = seq(1,7,1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
qplot(data = pf, x = ages)
qplot(data = pf, x = age)
qplot(data = pf, x = age, binwidth = 10)
qplot(data = pf, x = age, binwidth = 10,
xlab('Age in years'),
ylab('No of Facebook users'))
qplot(data = pf, x = age, binwidth = 10) +
xlab('Age in years') +
ylab('No of Facebook users'))
qplot(data = pf, x = age, binwidth = 10) +
xlab('Age in years') +
ylab('No of Facebook users')
qplot(data = pf, x = age, binwidth = 10,
color = I("black"), fill = I("#F5689")) +
xlab('Age in years') +
ylab('No of Facebook users')
qplot(data = pf, x = age, binwidth = 10,
color = I("black"), fill = I("#F58689")) +
xlab('Age in years') +
ylab('No of Facebook users')
qplot(data = pf, x = age, binwidth = 10,
color = I("black"), fill = I("#F58689")) +
xlab('Age in years') +
ylab('No of Facebook users') +
scale_x_continuous(breaks = seq(0,120,10), limits = c(0, 120))
qplot(data = pf, x = age, binwidth = 10,
color = I("black"), fill = I("#F58689")) +
xlab('Age in years') +
ylab('No of Facebook users') +
scale_x_continuous(breaks = seq(10,120,10), limits = c(0, 120))
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
qplot(data = pf, x = age, binwidth = 1,
color = I("black"), fill = I("#F58689")) +
xlab('Age in years') +
ylab('No of Facebook users') +
scale_x_continuous(breaks = seq(10,120,10), limits = c(0, 120))
summary(age)
summary(pf$age)
qplot(data = pf, x = age, binwidth = 1,
color = I("black"), fill = I("#F58689")) +
xlab('Age in years') +
ylab('No of Facebook users') +
scale_x_continuous(breaks = seq(5,113,5), limits = c(0, 113))
install.packages('gridExtra')
library(gridExtra)
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(sqrt(pf$friend_count))
summary(pf$friend_count)
summary(log10(pf$friend_count + 1))
summary(sqrt(pf$friend_count))
library(gridExtra)
qplot(data = pf, x = friend_count)
qplot(data = pf, x = friend_count) +
scale_y_log10()
qplot(data = pf, x = friend_count) +
scale_y_log10()
scale_y_sqrt()
qplot(data = pf, x = friend_count) +
scale_y_log10() +
scale_y_sqrt()
p1 <- qplot(data = pf, x = friend_count) +
scale_y_log10()
p2 <- qplot(data = pf, x = friend_count) +
scale_y_sqrt()
grid.arrange(p1, p2)
p0 <- qplot(data = pf, x = friend_count)
p1 <- qplot(data = pf, x = friend_count) +
scale_y_log10()
p2 <- qplot(data = pf, x = friend_count) +
scale_y_sqrt()
grid.arrange(p0, p1, p2)
p1 <- qplot(data = pf, x = friend_count)
p2 <- qplot(data = pf, x = log10(friend_count) + 1)
p3 <- qplot(data = pf, x = sqrt(friend_count))
grid.arrange(p1, p2, p3)
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
pf <- read.delim("pseudo_facebook.tsv")
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
sum(pf$www_likes)
print sum(pf$www_likes)
sum(pf$www_likes)
tapply(pf$www_likes, pf$gender, FUN = sum)
by(pf$www_likes, pf$gender, sum)
qplot(data = pf, x = gender, y = friend_count)
qplot(data = subset(pf, !is.na(gender)), x = gender, y = friend_count)
qplot(data = subset(pf, !is.na(gender)), x = gender, y = friend_count,
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)), geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender) & friend_count >= 0 & friend_count <= 1000),
geom = 'boxplot')
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(1, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot', ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,250))
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot')
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,250))
by(pf$friendships_initiated, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,150))
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0,130))
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in.length()
length(pf$mobile_check_in)
length(pf$mobile_check_in == 0)
length(pf$mobile_check_in == 1)
length(subset(pf, mobile_check_in == 1))
length(subset(pf, mobile_check_in == 0))
sum(pf$mobile_check_in == 1)
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in)
data("diamonds")
name(diamonds)
diamonds <- data("diamonds")
name(diamonds)
(diamonds)
$diamonds
?diamonds
diamonds
str(diamonds)
diamonds <- data(diamonds)
names(diamonds)
?diamonds
diamonds
str(diamonds)
data(diamonds)
names(diamonds
names(diamonds)
names(diamonds)
library(ggplot2)
summary(diamonds)
diamonds$color
qplot(data = diamonds)
qplot(data = diamonds, x=carat)
qplot(data = diamonds, x=price)
summary(diamonds$price)
length(diamonds$price)
length(diamonds$price < 500)
table(diamonds$price < 500)
diamonds$price < 250
table(diamonds$price < 250)
table(diamonds$price > 250)
table(diamonds$price > 500)
table(diamonds$price < 250)
table(diamonds$price > 15000)
table(diamonds$price >= 15000)
qplot(x = price, data = diamonds)
qplot(x = price, data = diamonds, binwdith=10)
qplot(x = price, data = diamonds, binwidth=10)
qplot(x = price, data = diamonds, binwidth=100)
qplot(x = price, data = diamonds, binwidth=500)
qplot(x = price, data = diamonds, binwidth=500) +
coord_cartesian(xlim = c(0,6000))
qplot(x = price, data = diamonds, binwidth=100) +
coord_cartesian(xlim = c(0,2000))
qplot(data = diamonds, x = price)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
qplot(data = diamonds, x = price) +
facet_wrap(~cut)
by(diamonds$cut, diamonds$price, summary
by(diamonds$cut, diamonds$price, summary)
by(diamonds$cut, diamonds$price, summary)
by(diamonds$price, summary)
summary(diamonds$price)
summary(diamonds$price, diamond$cut)
summary(diamond$cut)
summary(diamonds$price, diamonds$cut)
table(diamonds$price, diamonds$cut)
summary(diamonds$price, diamonds$cut)
summary(diamonds$cut)
tapply(diamonds$cut, diamonds$cut)
tapply(diamonds$cut, diamonds$price)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, max)
by(diamonds$price, diamonds$cut, min)
by(diamonds$price, diamonds$cut, median)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
